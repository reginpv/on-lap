// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          Int                  @id @default(autoincrement())
  name                        String
  email                       String               @unique
  emailVerified               DateTime?
  image                       String?
  role                        Role                 @default(USER)
  activatedAt                 DateTime?
  createdAt                   DateTime             @default(now())
  loggedInAt                  DateTime?            @default(now())
  deletedAt                   DateTime?
  password                    String?
  updatedAt                   DateTime?            @updatedAt

  @@index([email, deletedAt])
}

model ResetPasswordToken {
  id                          BigInt   @id(map: "idx_30320_primary") @default(autoincrement())
  email                       String   @db.VarChar(191)
  token                       String   @unique(map: "idx_30320_resetpasswordtoken_token_key") @db.VarChar(191)
  expires                     DateTime @db.Timestamptz(6)
  created_at                  DateTime @default(now()) @db.Timestamptz(6)

  @@unique([email, token], map: "idx_30320_resetpasswordtoken_email_token_key")

}

model Subject {
  id                          Int                  @id @default(autoincrement())
  name                        String
  code                        String?              @unique
  description                 String?              @db.Text
  category                    SubjectCategory
  area                        SubjectArea
  level                       AcademicLevel?
  difficulty                  DifficultyLevel?
  type                        SubjectType?
  credits                     Int?
  parentSubjectId             Int?
  createdAt                   DateTime             @default(now())
  updatedAt                   DateTime             @updatedAt
  deletedAt                   DateTime?
}


enum Role {
  SUPERADMIN
  ADMIN
  TEACHER
  STUDENT
  USER
}

enum SubjectCategory {
  CORE
  APPLIED
  SPECIALIZED
  OTHER
}

enum SubjectArea {
  MATHEMATICS
  SCIENCE
  LANGUAGE_LITERATURE
  SOCIAL_SCIENCES
  ARTS_HUMANITIES
  TECHNOLOGY_ENGINEERING
  BUSINESS_ECONOMICS
  HEALTH_MEDICINE
  PHYSICAL_EDUCATION
  VOCATIONAL_TECHNICAL
}

enum AcademicLevel {
  ELEMENTARY
  MIDDLE_SCHOOL
  HIGH_SCHOOL
  UNDERGRADUATE
  GRADUATE
  PROFESSIONAL
  CONTINUING_EDUCATION
}

enum DifficultyLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
}

enum SubjectType {
  THEORETICAL
  PRACTICAL
  LABORATORY
  STUDIO
  SEMINAR
  WORKSHOP
  FIELDWORK
  HYBRID
}

enum Tag {
  STEM
  CRITICAL_THINKING
  CREATIVE
  QUANTITATIVE
  RESEARCH_BASED
  PROJECT_BASED
  COLLABORATIVE
  INDEPENDENT_STUDY
  HANDS_ON
  WRITING_INTENSIVE
  DATA_ANALYSIS
  PROBLEM_SOLVING
  COMMUNICATION
  LEADERSHIP
  ETHICAL_REASONING
}

enum EnrollmentStatus {
  ENROLLED
  COMPLETED
  DROPPED
  FAILED
  IN_PROGRESS
}